{"version":3,"file":"static/js/186.0b38eb0e.chunk.js","mappings":"8SAEMA,EAAM,mCACNC,EAAQ,gCAEDC,EAAS,mCAAG,qGACFC,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,sCAA0CD,IAD7C,cACfI,EADe,yBAEdA,EAAKC,MAFS,2CAAH,qDAKTC,EAAY,mCAAG,WAAOC,GAAP,wFACLJ,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,iBAAqBM,EAArB,oBAAmCP,IADnC,cAClBI,EADkB,yBAEjBA,EAAKC,MAFY,2CAAH,sDAKZG,EAAe,mCAAG,WAAOD,GAAP,wFACRJ,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,iBAAqBM,EAArB,4BAA2CP,IADxC,cACrBI,EADqB,yBAEpBA,EAAKC,MAFe,2CAAH,sDAKfI,EAAe,mCAAG,WAAOF,GAAP,wFACRJ,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,iBAAqBM,EAArB,4BAA2CP,IADxC,cACrBI,EADqB,yBAEpBA,EAAKC,MAFe,2CAAH,sDAKfK,EAAY,mCAAG,WAAOC,GAAP,wFACLR,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,8BAAkCU,EAAlC,oBAAmDX,IADnD,cAClBI,EADkB,yBAEjBA,EAAKC,MAFY,2CAAH,qD,wGCUzB,UA/BA,WACE,OAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE0BR,EAAAA,EAAAA,IAAgBM,GAF1C,OAEUF,EAFV,OAGIC,EAAWD,EAAQK,SAHvB,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACN,KAGF,8BACGF,EAAQS,OAAS,GAChB,wBACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,wBAAqBA,EAAOC,SAAnBD,EAAOjB,GADC,OAKrB,oDAIP,C","sources":["API/api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = \"9efc729b95f20ce1b26304465f4ffb42\"\nconst BASE_URL = `https://api.themoviedb.org/3/`;\n\nexport const getMovies = async () => {\n    const resp = await axios(`${BASE_URL}trending/movie/day?api_key=${KEY}`);\n    return resp.data   \n}\n\nexport const getMovieById = async (id) => {\n    const resp = await axios(`${BASE_URL}movie/${id}?api_key=${KEY}`);\n    return resp.data  \n}\n\nexport const getMovieCredits = async (id) => {\n    const resp = await axios(`${BASE_URL}movie/${id}/credits?api_key=${KEY}`);\n    return resp.data  \n}\n\nexport const getMovieReviews = async (id) => {\n    const resp = await axios(`${BASE_URL}movie/${id}/reviews?api_key=${KEY}`);\n    return resp.data  \n}\n\nexport const searchMovies = async (query) => {\n    const resp = await axios(`${BASE_URL}search/movie?query=${query}&api_key=${KEY}`);\n    return resp.data  \n}","import { getMovieReviews } from 'API/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        const reviews = await getMovieReviews(movieId);\n        setReviews(reviews.results);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>{review.content}</li>\n          ))}\n        </ul>\n      ) : (\n        <p>There isn't any reviews</p>\n      )}\n    </>\n  );\n}\n\nexport default Reviews;\n"],"names":["KEY","BASE_URL","getMovies","axios","resp","data","getMovieById","id","getMovieCredits","getMovieReviews","searchMovies","query","useState","reviews","setReviews","movieId","useParams","useEffect","results","console","log","getReviews","length","map","review","content"],"sourceRoot":""}