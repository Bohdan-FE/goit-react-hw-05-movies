{"version":3,"file":"static/js/736.9a46d48e.chunk.js","mappings":"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","sources":["API/api.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = \"9efc729b95f20ce1b26304465f4ffb42\"\nconst BASE_URL = `https://api.themoviedb.org/3/`;\n\nexport const getMovies = async (page) => {\n    const resp = await axios(`${BASE_URL}trending/movie/day?page=${page}&api_key=${KEY}`);\n    return resp.data   \n}\n\nexport const getMovieById = async (id) => {\n    const resp = await axios(`${BASE_URL}movie/${id}?api_key=${KEY}`);\n    return resp.data  \n}\n\nexport const getMovieCredits = async (id) => {\n    const resp = await axios(`${BASE_URL}movie/${id}/credits?api_key=${KEY}`);\n    return resp.data  \n}\n\nexport const getMovieReviews = async (id) => {\n    const resp = await axios(`${BASE_URL}movie/${id}/reviews?api_key=${KEY}`);\n    return resp.data  \n}\n\nexport const searchMovies = async (query, page) => {\n    const resp = await axios(`${BASE_URL}search/movie?query=${query}&page=${page}?&api_key=${KEY}`);\n    return resp.data  \n}","import styled from 'styled-components';\n\nexport const ActorList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 15px;\n  gap: 30px;\n  li {\n    flex-basis: calc((100% - 5 * 30px) / 6);\n  }\n`;\n","import { getMovieCredits } from 'API/api';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { ActorList } from './Cast.styled';\n\nfunction Cast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getCust() {\n      try {\n        const cast = await getMovieCredits(movieId);\n        setCast(cast.cast);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getCust();\n  }, [movieId]);\n\n  return (\n    <>\n      <ActorList>\n        {cast\n          .filter(actor => actor.profile_path !== null)\n          .map(actor => (\n            <li key={actor.id}>\n              <img\n                src={\n                  actor.profile_path\n                    ? 'https://image.tmdb.org/t/p/w500' + actor.profile_path\n                    : 'https://image.tmdb.org/t/p/w500/tPkgBEpq1Rx7wcTFEjZFRhbTLrd.jpg'\n                }\n                alt=\"actor.name\"\n              />\n              <p>{actor.name}</p>\n            </li>\n          ))}\n      </ActorList>\n      <Outlet />\n    </>\n  );\n}\n\nexport default Cast;\n"],"names":["KEY","BASE_URL","getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","resp","wrap","_context","prev","next","axios","concat","sent","abrupt","data","stop","_x","apply","arguments","getMovieById","_ref2","_callee2","id","_context2","_x2","getMovieCredits","_ref3","_callee3","_context3","_x3","getMovieReviews","_ref4","_callee4","_context4","_x4","searchMovies","_ref5","_callee5","query","_context5","_x5","_x6","ActorList","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","useEffect","_getCust","_cast","t0","console","log","getCust","_jsxs","_Fragment","children","_jsx","filter","actor","profile_path","map","src","alt","name","Outlet"],"sourceRoot":""}